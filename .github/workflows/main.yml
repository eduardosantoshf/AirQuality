name: CI Script

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
        # don't run this workflow when the are pushes, and there are only changes for this directories:
        - 'reporting/**'
        - 'monitoring/**'
        # don't run this workflow when the are pushes and there are only changes for the following files:
        - '**.md'
        - '**.pdf'
        - '**.docx'
        - '**.gitignore'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build Maven Project
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch from Github
        uses: actions/checkout@v2

      - name: Step 2 - Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          

      - name: Step 3 - Have Github Actions build Maven project
        run: mvn -B package --file AirQuality/pom.xml
        
      - name: Step 4 - List the current directory
        run: ls -la
        
      - name: Step 5 - Show files inside the target/ folder
        run: |
          cd AirQuality/target
          ls -la
  
  sonar:
    name: SonarCloud Code Inspection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            cd AirQuality
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
